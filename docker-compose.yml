version: '3.1'

services:
  dashboard:
    build:
      context: dashboard
      dockerfile: Dockerfile
    command: ["./autostart.sh"]
    env_file:
      - ./dashboard/.env.Docker
    restart: always
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - dashboard-volume:/usr/src/carbon-api-dashboard/dashboard
    depends_on:
      - api
      - db_dashboard

  cron:
    build:
      context: dashboard
      dockerfile: cron.Dockerfile
    command: ["./startcron.sh"]
    env_file:
      - ./dashboard/.env.Docker
    volumes:
      - dashboard-volume:/usr/src/carbon-api-dashboard/dashboard
    depends_on:
      - dashboard
      - api
      - db_dashboard

  db_dashboard:
    image: postgres
    env_file:
      - ./dashboard/.env.Docker
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", '-U', 'postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./init-postgres-user.sh:/docker-entrypoint-initdb.d/01-init-postgres-user.sh
      - ./dashboard/dump.sql:/docker-entrypoint-initdb.d/02-dump.sql
      - db-dashboard-volume:/var/lib/postgresql/data

  api:
    build:
      context: api
      dockerfile: Dockerfile
    command: ["./autostart.sh"]
    env_file:
      - ./api/.env.Docker
    restart: always
    ports:
      - "127.0.0.1:3001:3000"
    depends_on:
      - db_api

  db_api:
    image: postgres
    env_file:
      - ./api/.env.Docker
    restart: always
    ports:
      - "127.0.0.1:5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", '-U', 'postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./init-postgres-user.sh:/docker-entrypoint-initdb.d/01-init-postgres-user.sh
      - ./api/dump.sql:/docker-entrypoint-initdb.d/02-dump.sql
      - db-api-volume:/var/lib/postgresql/data

volumes:
  dashboard-volume:
  db-dashboard-volume:
  db-api-volume: